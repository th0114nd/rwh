f :: (a, a, a, a) -> Int -> a
f (x, _, _, _) 0 = x
f (_, x, _, _) 1 = x
f (_, _, x, _) 2 = x
f (_, _, _, x) 3 = x
f t n = f t (n `rem` 4)

g :: (a, a, a, a, a, a) -> Int -> a
g (x, _, _, _, _, _) 0 = x
g (_, x, _, _, _, _) 1 = x
g (_, _, x, _, _, _) 2 = x
g (_, _, _, x, _, _) 3 = x
g (_, _, _, _, x, _) 4 = x
g (_, _, _, _, _, x) 5 = x
g t n = g t (n `rem` 6)
